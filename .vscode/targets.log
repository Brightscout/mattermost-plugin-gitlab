make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Jul 25 11:11:56 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
XDG_SESSION_TYPE = x11
# environment
 
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /home/jtg-d126/.nvm/versions/node/v8.0.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/jtg-d126/mattermost-plugin-gitlab
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 1)
GO = $(shell command -v go 2> /dev/null)
# environment
VTE_VERSION = 6003
# makefile (from 'Makefile', line 10)
DLV_DEBUG_PORT := 2346
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'build/custom.mk', line 6)
GO_BUILD_FLAGS =  -ldflags '-X "github.com/mattermost/mattermost-plugin-api/experimental/telemetry.rudderWriteKey=$(MM_RUDDER_WRITE_KEY)"'
# environment
_ = /usr/bin/code
# environment
JOURNAL_STREAM = 8:50139
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'Makefile', line 5)
MANIFEST_FILE = plugin.json
# makefile (from 'build/custom.mk', line 1)
MAKEFILE_LIST :=  Makefile build/setup.mk build/legacy.mk build/custom.mk
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile (from 'Makefile', line 14)
GO111MODULE = on
# makefile (from 'Makefile', line 2)
NPM = $(shell command -v npm 2> /dev/null)
# environment
USERNAME = jtg-d126
# environment
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus,guid=1d128b4f839081f1e355606762dd2e8d
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
MANAGERPID = 1523
# makefile (from 'build/setup.mk', line 14)
PLUGIN_ID = $(shell build/bin/manifest id)
# makefile (from 'build/setup.mk', line 32)
HAS_PUBLIC = $(wildcard public/.)
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/jtg-d126/mattermost-plugin-gitlab
# environment
GOPROXY = https://proxy.golang.org,direct
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/go/bin:/home/jtg-d126/.nvm/versions/node/v8.0.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/jtg-d126/go/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/jtgd126-Latitude-3400:@/tmp/.ICE-unix/1757,unix/jtgd126-Latitude-3400:/tmp/.ICE-unix/1757
# makefile (from 'Makefile', line 27)
BUNDLE_NAME = $(PLUGIN_ID)-$(PLUGIN_VERSION).tar.gz
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'Makefile', line 11)
DEFAULT_GOOS := linux
# environment
GOPATH = /home/jtg-d126/go
# environment
NVM_BIN = /home/jtg-d126/.nvm/versions/node/v8.0.0/bin
# makefile (from 'Makefile', line 17)
ASSETS_DIR = assets
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
INVOCATION_ID = 4dd9836de0834c79bed07ce1e42cf3cf
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'Makefile', line 9)
MM_UTILITIES_DIR = ../mattermost-utilities
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 6597
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'build/setup.mk', line 26)
HAS_SERVER = $(shell build/bin/manifest has_server)
# environment
PWD = /home/jtg-d126/mattermost-plugin-gitlab
# default
.LOADED := 
# environment
SSH_AGENT_PID = 1718
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
GOMODCACHE = /home/jtg-d126/go/pkg/mod
# environment
HOME = /home/jtg-d126
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/jtg-d126/.config/Code/CachedData/4af164ea3a06f701fe3e89a2bcbb421d2026b68f
# makefile (from 'Makefile', line 3)
CURL = $(shell command -v curl 2> /dev/null)
# environment
LOGNAME = jtg-d126
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = 
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 12)
DEFAULT_GOARCH := amd64
# environment
MAKELEVEL := 0
# environment
COLORTERM = truecolor
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SHLVL = 1
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-cda4f90b-26ac-423e-8fc2-da27b06ee84b.sock
# default
MAKE_VERSION := 4.2.1
# environment
USER = jtg-d126
# makefile (from 'build/setup.mk', line 20)
PLUGIN_VERSION = $(shell build/bin/manifest version)
# makefile
.DEFAULT_GOAL := default
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
GOROOT = /usr/local/go
# makefile (from 'build/custom.mk', line 4)
MM_RUDDER_WRITE_KEY = 1d5bMvdrfWClLxgK1FvV3s4U1tg
# makefile (from 'Makefile', line 4)
MM_DEBUG = 
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := make
# environment
OLDPWD = /home/jtg-d126
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = en_IN:en
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-4014f01d-1.68.0-main.sock
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/jtg-d126/.nvm
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# environment
NO_AT_BRIDGE = 1
# environment
QT_ACCESSIBILITY = 1
# environment
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# makefile (from 'Makefile', line 7)
GO_TEST_FLAGS = -race
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# makefile (from 'build/setup.mk', line 29)
HAS_WEBAPP = $(shell build/bin/manifest has_webapp)
# environment
DBUS_STARTER_BUS_TYPE = session
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
GNOME_TERMINAL_SCREEN = /org/gnome/Terminal/screen/617318fe_c947_4ecd_945b_e263103877ac
# automatic
^F = $(notdir $^)
# environment
GNOME_TERMINAL_SERVICE = :1.78
# default
SUFFIXES := 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 6597
# environment
DBUS_STARTER_ADDRESS = unix:path=/run/user/1000/bus,guid=1d128b4f839081f1e355606762dd2e8d
# makefile (from 'build/setup.mk', line 35)
HAS_MM_UTILITIES = $(wildcard $(MM_UTILITIES_DIR)/.)
# variable set hash-table stats:
# Load=141/1024=14%, Rehash=0, Collisions=25/325=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 64769, inode 14292868): 27 files, no impossibilities.

# 27 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
webapp/package.json:
#  Implicit rule search has been done.
#  Last modified 2022-07-13 16:16:01.132062
#  File has been updated.
#  Successfully updated.

check-attach:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 167):
	@if [ -z ${PLUGIN_PID} ]; then \
		echo "Could not find plugin PID; the plugin is not running. Exiting."; \
		exit 1; \
	else \
		echo "Located Plugin running with PID: ${PLUGIN_PID}"; \
	fi

deploy-from-watch: bundle
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 151):
	./build/bin/pluginctl deploy $(PLUGIN_ID) dist/$(BUNDLE_NAME)

enable:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 233):
	./build/bin/pluginctl enable $(PLUGIN_ID)

i18n-extract:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 219):
	@echo "You must clone github.com/mattermost/mattermost-utilities repo in .. to use this command"

all: check-style test dist
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

.PHONY: default apply mock all check-style server webapp bundle dist deploy watch deploy-from-watch setup-attach check-attach attach attach-headless detach test coverage i18n-extract disable enable reset kill clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

setup-attach:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 156):
	$(eval PLUGIN_PID := $(shell ps aux | grep "plugins/${PLUGIN_ID}" | grep -v "grep" | awk -F " " '{print $$2}'))
	$(eval NUM_PID := $(shell echo -n ${PLUGIN_PID} | wc -w))
	@if [ ${NUM_PID} -gt 2 ]; then \
		echo "** There is more than 1 plugin process running. Run 'make kill reset' to restart just one."; \
		exit 1; \
	fi

attach: setup-attach check-attach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 177):
	dlv attach ${PLUGIN_PID}

bundle:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 109):
	rm -rf dist/
	mkdir -p dist/$(PLUGIN_ID)
	cp $(MANIFEST_FILE) dist/$(PLUGIN_ID)/
	cp -r $(ASSETS_DIR) dist/$(PLUGIN_ID)/
	cp -r public dist/$(PLUGIN_ID)/
	mkdir -p dist/$(PLUGIN_ID)/server
	cp -r server/dist dist/$(PLUGIN_ID)/server/
	mkdir -p dist/$(PLUGIN_ID)/webapp
	cp -r webapp/dist dist/$(PLUGIN_ID)/webapp/
	cd dist && tar -cvzf $(BUNDLE_NAME) $(PLUGIN_ID)
	@echo plugin built at: dist/$(BUNDLE_NAME)

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
 
#  Last modified 2022-07-22 20:30:39.700243703
#  File has been updated.
#  Successfully updated.

server:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 61):
	mkdir -p server/dist;
	cd server && env GOOS=linux GOARCH=amd64 $(GO) build $(GO_BUILD_FLAGS) -trimpath -o dist/plugin-linux-amd64;
	cd server && env GOOS=linux GOARCH=arm64 $(GO) build $(GO_BUILD_FLAGS) -trimpath -o dist/plugin-linux-arm64;
	cd server && env GOOS=darwin GOARCH=amd64 $(GO) build $(GO_BUILD_FLAGS) -trimpath -o dist/plugin-darwin-amd64;
	cd server && env GOOS=darwin GOARCH=arm64 $(GO) build $(GO_BUILD_FLAGS) -trimpath -o dist/plugin-darwin-arm64;
	cd server && env GOOS=windows GOARCH=amd64 $(GO) build $(GO_BUILD_FLAGS) -trimpath -o dist/plugin-windows-amd64.exe;

apply:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'build/legacy.mk', line 3):
	@echo make apply is deprecated and has no effect.

test: webapp/node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 197):
	$(GO) test -v $(GO_TEST_FLAGS) ./server/...
	cd webapp && $(NPM) run test;

check-style: webapp/node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := check-style
# automatic
# % := 
# automatic
# * := 
# automatic
# + := webapp/node_modules
# automatic
# | := 
# automatic
# < := webapp/node_modules
# automatic
# ^ := webapp/node_modules
# automatic
# ? := webapp/node_modules
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'Makefile', line 41):
	@echo Checking for style guide compliance
	cd webapp && npm run lint
	@if ! [ -x "$$(command -v golangci-lint)" ]; then \
		echo "golangci-lint is not installed. Please see https://github.com/golangci/golangci-lint#install for installation instructions."; \
		exit 1; \
	fi; \

	@echo Running golangci-lint
	golangci-lint run ./...

attach-headless: setup-attach check-attach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 182):
	dlv attach ${PLUGIN_PID} --listen :$(DLV_DEBUG_PORT) --headless=true --api-version=2 --accept-multiclient

sync:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 268):
	@echo STARTERTEMPLATE_PATH is not set.
	@echo Set STARTERTEMPLATE_PATH to a local clone of https://github.com/mattermost/mattermost-plugin-starter-template and retry.
	@exit 1
	cd ${STARTERTEMPLATE_PATH} && go run ./build/sync/main.go ./build/sync/plan.yml $(PWD)

help:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 276):
	@cat Makefile build/*.mk | grep -v '\.PHONY' |  grep -v '\help:' | grep -B1 -E '^[a-zA-Z0-9_.-]+:.*' | sed -e "s/:.*//" | sed -e "s/^## //" |  grep -v '\-\-' | sed '1!G;h;$$!d' | awk 'NR%2{printf "\033[36m%-30s\033[0m",$$0;next;}1' | sort

default: all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

webapp/node_modules: webapp/package.json
#  Implicit rule search has not been done.
#  Last modified 2022-07-14 13:50:42.653339
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 91):
	cd webapp && $(NPM) install --verbose
	touch $@

watch: server bundle
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 143):
	cd webapp && $(NPM) run build:watch

# Not a target:
build/custom.mk:
#  Implicit rule search has been done.
#  Last modified 2022-07-13 16:16:01.124062
#  File has been updated.
#  Successfully updated.

detach: setup-attach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 187):
	@DELVE_PID=$(shell ps aux | grep "dlv attach ${PLUGIN_PID}" | grep -v "grep" | awk -F " " '{print $$2}') && \
	if [ "$$DELVE_PID" -gt 0 ] > /dev/null 2>&1 ; then \
		echo "Located existing delve process running with PID: $$DELVE_PID. Killing." ; \
		kill -9 $$DELVE_PID ; \
	fi

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

kill: detach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 243):
	$(eval PLUGIN_PID := $(shell ps aux | grep "plugins/${PLUGIN_ID}" | grep -v "grep" | awk -F " " '{print $$2}'))
	@for PID in ${PLUGIN_PID}; do \
		echo "Killing plugin pid $$PID"; \
		kill -9 $$PID; \
	done; \


webapp: webapp/node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 100):
	cd webapp && $(NPM) run build;

# Not a target:
build/setup.mk:
#  Implicit rule search has been done.
#  Last modified 2022-07-13 16:16:01.124062
#  File has been updated.
#  Successfully updated.

reset: detach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 238):
	./build/bin/pluginctl reset $(PLUGIN_ID)

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 253):
	rm -fr dist/
	rm -fr server/coverage.txt
	rm -fr server/dist
	rm -fr webapp/junit.xml
	rm -fr webapp/dist
	rm -fr webapp/node_modules
	rm -fr build/bin/

coverage: webapp/node_modules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 210):
	$(GO) test $(GO_TEST_FLAGS) -coverprofile=server/coverage.txt ./...
	$(GO) tool cover -html=server/coverage.txt

dist: server webapp bundle
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
build/legacy.mk:
#  Implicit rule search has been done.
#  Last modified 2022-07-13 16:16:01.124062
#  File has been updated.
#  Successfully updated.

deploy: dist
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 137):
	./build/bin/pluginctl deploy $(PLUGIN_ID) dist/$(BUNDLE_NAME)

disable: detach
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 228):
	./build/bin/pluginctl disable $(PLUGIN_ID)

mock:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'build/custom.mk', line 12):
	go install github.com/golang/mock/mockgen@v1.6.0
	mockgen -destination server/mocks/mock_gitlab.go github.com/mattermost/mattermost-plugin-gitlab/server/gitlab Gitlab
	mockgen -destination server/gitlab/mocks/mock_gitlab.go github.com/mattermost/mattermost-plugin-gitlab/server/gitlab Gitlab

# files hash-table stats:
# Load=36/1024=4%, Rehash=0, Collisions=0/149=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 61 / storage = 574 B / avg = 9 B
# current buf: size = 8162 B / used = 574 B / count = 61 / avg = 9 B

# strcache performance: lookups = 198 / hit rate = 69%
# hash-table stats:
# Load=61/8192=1%, Rehash=0, Collisions=1/198=1%
# Finished Make data base on Mon Jul 25 11:11:56 2022

 
